name: sao-roller

services:
  frontend:
    build:
      dockerfile: ./infrastructure/src/docker/frontend.Containerfile
    container_name: frontend
    security_opt:
    - no-new-privileges:true
    networks:
    - internal

  backend:
    build:
      dockerfile: ./infrastructure/src/docker/backend.Containerfile
    container_name: backend
    security_opt:
    - no-new-privileges:true
    networks:
    - internal
    depends_on:
      database:
        condition: service_healthy
        restart: true
    environment:
      DATABASE_SERVICE_NAME: database

  database:
    image: postgres:17.2-bookworm
    restart: unless-stopped
    container_name: database
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "--dbname=saorpg", "--username=saorpg"]
    security_opt:
    - no-new-privileges:true
    volumes:
    - postgres-data:/var/lib/postgresql/data:rw
    - ./database/configuration/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    - ./database/configuration/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    - ./database/src/shell:/docker-entrypoint-initdb.d:ro
    networks:
    - internal
    command:
    - -c
    - config_file=/etc/postgresql/postgresql.conf
    - -c
    - hba_file=/etc/postgresql/pg_hba.conf

  sqitch:
    build:
      dockerfile: ./infrastructure/src/docker/sqitch.Containerfile
    # Needed because links is not supported by podman
    container_name: sqitch
    security_opt:
    - no-new-privileges:true
    environment:
      DATABASE_CONTAINER: database
    networks:
    - internal
    depends_on:
      database:
        condition: service_started

  proxy:
    image: nginxinc/nginx-unprivileged
    security_opt:
    - no-new-privileges:true
    environment:
      API_SERVER_CONTAINER: backend
      FRONTEND_SERVER_CONTAINER: frontend
    ports:
    - 8080:8080
    volumes:
    - ./infrastructure/src/nginx/templates:/etc/nginx/templates:ro
    networks:
    - external
    - internal

volumes:
  postgres-data:

networks:
  # Internal network is added to secure database while using trust authentication
  external:
  internal:
    internal: true
